#summary A collection of billboards (faces which are always facing the given direction) with the same (default) dimensions, material and which are fairly close proximity to each other.

=== Overview ===
Billboards are rectangles made up of 2 tris which are always facing the given direction. They are typically used for special effects like particles. This class collects together a set of billboards with the same (default) dimensions, material and relative locality in order to process them more efficiently. The entire set of billboards will be culled as a whole (by default, although this can be changed if you want a large set of billboards which are spread out and you want them culled individually), individual Billboards have locations which are relative to the set (which itself derives it's position from the !SceneNode it is attached to), they will be rendered as a single rendering operation, and some calculations will be sped up by the fact that they use the same dimensions so some workings can be reused. 
<BR>
<BR>
=== !CreateBillboardSet(real pool_size) ===
----
Creates a new billboard set.

This function creates a new billboard set which is registered with the current !SceneManager. The !SceneManager will destroy this object when it shuts down or when the !ClearScene function is called, so the caller does not have to worry about destroying this instance (in fact, it definitely should not do this). 
====Parameters====
   * _pool_size_ - The initial size of the pool of billboards.
<BR>
<BR>
=== !DestroyBillboardSet(real billboard_set_id) ===
----
Removes a billboard set from the !SceneManager and destroys it.

Must only be done if the billboard set is not attached to a !SceneNode. It may be safer to wait to clear the whole scene. If you are unsure, use !ClearScene. 
====Parameters====
   * _billboard_set_id_ - The ID of the billboard set.
<BR>
<BR>
=== !CreateBillboardSetBillboard(real billboard_set_id, real x, real y, real z, real color) ===
----
Creates a new billboard and adds it to this set.  Returns the ID if the billboard.

Note that you can create more Billboards than your pool setting specifies.
====Parameters====
   * _billboard_set_id_ - The ID of the billboard set.
   * _x_, _y_, _z_ - The position to place the billboard.
   * _color_ - The color of the billboard.
<BR>
<BR> 
=== !RemoveBillboardSetBillboard(real billboard_set_id, real billboard_id) ===
----
Removes a Billboard from a set and destroys it.
====Parameters====
   * _billboard_set_id_ - The ID of the billboard set.
   * _billboard_id_ - The ID of the billboard.
<BR>
<BR> 
=== !GetNumBillboardSetBillboards(real billboard_set_id) ===
----
Returns the current number of Billboards in a set.
====Parameters====
   * _billboard_set_id_ - The ID of the billboard set.
<BR>
<BR> 
=== !SetBillboardSetPoolSize(real billboard_set_id, real pool_size) ===
----
Adjusts the size of the pool of billboards available in a set.

This function adjusts the preallocated size of the pool. If you try to reduce the size of the pool, the set has the option of ignoring you if too many billboards are already in use. Bear in mind that calling this function will incur significant construction / destruction calls so should be avoided in time-critical code.
====Parameters====
   * _billboard_set_id_ - The ID of the billboard set.
   * _pool_size_ - The new size of the pool of billboards.
<BR>
<BR>
=== !GetBillboardSetPoolSize(real billboard_set_id) ===
----
Returns the current size of the billboard pool.
====Parameters====
   * _billboard_set_id_ - The ID of the billboard set.
<BR>
<BR>


=== !SetBillboardSetBillboardOrigin(real billboard_set_id, real type) ===
----
Sets the point which acts as the origin point for all billboards in this set.

This setting controls the fine tuning of where a billboard appears in relation to it's position. It could be that a billboard's position represents it's center (e.g. for fireballs), it could mean the center of the bottom edge (e.g. a tree which is positioned on the ground), the top-left corner (e.g. a cursor). 

The default setting is BBO_CENTER.
====Parameters====
   * _billboard_set_id_ - The ID of the billboard set.
   * _type_ - The type of origin to use.  Can be:
      * global.BBO_TOP_LEFT
      * global.BBO_TOP_CENTER
      * global.BBO_TOP_RIGHT
      * global.BBO_CENTER_LEFT
      * global.BBO_CENTER
      * global.BBO_CENTER_RIGHT
      * global.BBO_BOTTOM_LEFT
      * global.BBO_BOTTOM_CENTER
      * global.BBO_BOTTOM_RIGHT
<BR>
<BR>
=== !SetBillboardSetDefaultDimensions(real billboard_set_id, real width, real height) ===
----
Sets the default dimensions of the billboards in a set.

All billboards in a set are created with these default dimensions. The set will render most efficiently if all the billboards in the set are the default size. It is possible to alter the size of individual billboards at the expense of extra calculation. See the !SetBillboardDimensions function for more info.
====Parameters====
   * _billboard_set_id_ - The ID of the billboard set.
   * _width_ - The new default width of the billboards.
   * _height_ - The new default  height of the billboards.
<BR>
<BR>
=== !GetBillboardSetDefaultWidth(real billboard_set_id) ===
----
Returns the default width for all billboards in a set.
====Parameters====
   * _billboard_set_id_ - The ID of the billboard set.
<BR>
<BR>
=== !GetBillboardSetDefaultHeight(real billboard_set_id) ===
----
Returns the default height for all billboards in a set.
====Parameters====
   * _billboard_set_id_ - The ID of the billboard set.
<BR>
<BR>
=== !SetBillboardSetMaterial(real billboard_set_id, string material_name) ===
----
Sets the name of the material to be used for a billboard set.
====Parameters====
   * _billboard_set_id_ - The ID of the billboard set.
   * _material_name_ - The name of the material.
<BR>
<BR>
=== !EnableBillboardSetPointRendering(real billboard_set_id, real enable) ===
----
Enable or disable whether a billboard set will use point rendering rather than manually generated quads.

By default a billboard set is rendered by generating geometry for a textured quad in memory, taking into account the size and orientation settings, and uploading it to the video card. The alternative is to use hardware point rendering, which means that only one position needs to be sent per billboard rather than 4 and the hardware sorts out how this is rendered based on the render state. 

Using point rendering is faster than generating quads manually, but is more restrictive. The following restrictions apply:
   * Only the BBT_POINT type is supported
   * Size and appearance of each billboard is controlled by the material (!SetPassPointSize, !SetPassPointSizeAttenuation, !EnablePassPointSprites)
   * Per-billboard size is not supported (stems from the above)
   * Per-billboard rotation is not supported, this can only be controlled through texture unit rotation
   * Only BBO_CENTER origin is supported
   * Per-billboard texture coordinates are not supported

You will almost certainly want to enable in your material pass both point attenuation and point sprites if you use this option.
====Parameters====
   * _billboard_set_id_ - The ID of the billboard set.
   * _enable_ - Whether to enable or disable point rendering.
<BR>
<BR> 
=== !AttachBillboardSetToSceneNode(real billboard_set_id, real scene_node_id) ===
----
Attaches an billboard set to the specified !SceneNode.
====Parameters====
   * _billboard_set_id_ - The ID of the billboard set.
   * _scene_node_id_ - The ID of the !SceneNode.
<BR>
<BR>
=== !DetachBillboardSetFromSceneNode(real billboard_set_id, real scene_node_id) ===
----
Detaches an billboard set from the specified !SceneNode.
====Parameters====
   * _billboard_set_id_ - The ID of the billboard set.
   * _scene_node_id_ - The ID of the !SceneNode.
<BR>
<BR>
=== !SetBillboardSetQueryFlags(real billboard_set_id, real flags) ===
----
Sets the query flags for this object.

When performing a scene query, this entity will be included or excluded according to flags on the billboard set and flags on the query. This is a bitwise value, so only when a bit on these flags is set, will it be included in a query asking for that flag. The meaning of the bits is application-specific.
====Parameters====
   * _billboard_set_id_ - The ID of the billboard set.
   * _flags_ - The application specific flags.
<BR>
<BR>