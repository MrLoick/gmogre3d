#summary GUI CheckBox functions.
<BR>
<BR>
=== SetGUICheckBoxSelected(real gui_check_box_id, real selected) ===
----
Checks or unchecks a GUI checkbox.
====Parameters====
   * _gui_check_box_id_ - The ID of the checkbox.
<BR>
<BR>
=== IsGUICheckBoxSelected(real gui_check_box_id) ===
----
Returns whether a GUI checkbox is checked.
====Parameters====
   * _gui_check_box_id_ - The ID of the checkbox.
<BR>
<BR>
=== SetGUICheckBoxEventCallback(real gui_check_box_id, string event, real func) ===
----
Sets a GM script to be called when the specified GUI event is triggered.

There are different types of events, and the arguments passed to the GM script depends on the event type. All event types pass the GUI checkbox that triggered the event as the first argument. The GUI_CHECKBOX_EVENT_STATE_CHANGED event also passes whether the checkbox was selected or deselected as the second parameter.
====Parameters====
   * _gui_check_box_id_ - The ID of the checkbox.
   * _event_ - The type of event to trap. Can be:
      * GUI_CHECKBOX_EVENT_STATE_CHANGED
   * _func_ The GM script to execute when the event is triggered.
<BR>
<BR>

#summary GUI ComboBox functions.
<BR>
<BR>
=== EnableGUIComboBoxReadOnly(real gui_combo_box_id, real enable) ===
----
Enables or disables whether the GUI combobox is read-only.
====Parameters====
   * _gui_combo_box_id_ - The ID of the GUI combobox.
<BR>
<BR>
=== AddGUIComboBoxItem(real gui_combo_box_id, string text, real id) ===
----
Adds an item to a GUI combobox.
====Parameters====
   * _gui_combo_box_id_ - The ID of the GUI combobox.
   * _text_ - The text to add.
   * _id_ - Optional user specified ID to associate with the item.
<BR>
<BR>
=== RemoveGUIComboBoxItem(real gui_combo_box_id, real index) ===
----
Removes an item from a GUI combobox.
====Parameters====
   * _gui_combo_box_id_ - The ID of the GUI combobox.
   * _index_ - The index of the item to remove.
<BR>
<BR>
=== GetGUIComboBoxItemCount(real gui_combo_box_id) ===
----
Returns the number of items in a GUI combobox.
====Parameters====
   * _gui_combo_box_id_ - The ID of the GUI combobox.
<BR>
<BR>
=== ClearGUIComboBoxItems(real gui_combo_box_id) ===
----
Removes all items from a GUI combobox.
====Parameters====
   * _gui_combo_box_id_ - The ID of the GUI combobox.
<BR>
<BR>
=== GetGUIComboBoxSelectedIndex(real gui_combo_box_id) ===
----
Returns the index of the selected item in a GUI combobox.
====Parameters====
   * _gui_combo_box_id_ - The ID of the GUI combobox.
<BR>
<BR>
=== GetGUIComboBoxSelectedItemID(real gui_combo_box_id) ===
----
Returns the ID associated with an item in a GUI combobox GUI combobox.
====Parameters====
   * _gui_combo_box_id_ - The ID of the GUI combobox.
<BR>
<BR>
=== SelectGUIComboBoxIndex(real gui_combo_box_id, real index) ===
----
Selects the specified item in a GUI combobox.
====Parameters====
   * _gui_combo_box_id_ - The ID of the GUI combobox.
   * _index_ - The index of the item to select.
<BR>
<BR>
=== SetGUIComboBoxEventCallback(real gui_combo_box_id, string event, real func) ===
----
Sets a GM script to be called when the specified GUI event is triggered.

There are different types of events, and the arguments passed to the GM script depends on the event type. All event types pass the GUI checkbox that triggered the event as the first argument. The GUI_COMBOBOX_EVENT_SELECTION_ACCEPTED event also passes the index of the selected item as the second parameter.
====Parameters====
   * _gui_combo_box_id_ - The ID of the GUI combobox.
   * _event_ - The type of event to trap. Can be:
      * GUI_COMBOBOX_EVENT_SELECTION_ACCEPTED
   * _func_ The GM script to execute when the event is triggered.
<BR>
<BR>
#summary GUI EditBox functions.
<BR>
<BR>
=== SetGUIEditBoxMaxTextLength(real gui_edit_box_id, real max_length) ===
----
Description.
====Parameters====
   * _asdf_ - asdf.
<BR>
<BR>
=== EnableGUIEditBoxReadOnly(real gui_edit_box_id, real enable) ===
----
Description.
====Parameters====
   * _asdf_ - asdf.
<BR>
<BR>
=== EnableGUIEditBoxTextMasked(real gui_edit_box_id, real enable) ===
----
Description.
====Parameters====
   * _asdf_ - asdf.
<BR>
<BR>
=== SetGUIEditBoxTextValidationString(real gui_edit_box_id, string validation) ===
----
Description.
====Parameters====
   * _asdf_ - asdf.
<BR>
<BR>
=== IsGUIEditBoxTextTextValid(real gui_edit_box_id) ===
----
Description.
====Parameters====
   * _asdf_ - asdf.
<BR>
<BR>
=== SetGUIEditBoxEventCallback(real gui_window_id, string event_name, real func) ===
----
Description.
====Parameters====
   * _asdf_ - asdf.
<BR>
<BR>

#summary GUI ImageSet functions.
<BR>
<BR>
=== CreateGUIImageSet(string name, real gui_texture_id) ===
----
Description.
====Parameters====
   * _asdf_ - asdf.
<BR>
<BR>
=== CreateGUIImageSetFromFile(string name, string filename) ===
----
Description.
====Parameters====
   * _asdf_ - asdf.
<BR>
<BR>
=== DestroyGUIImageSet(real gui_image_set_id) ===
----
Description.
====Parameters====
   * _asdf_ - asdf.
<BR>
<BR>
=== DefineGUIImageSetImage1(real gui_image_set_id, string name) ===
----
Description.
====Parameters====
   * _asdf_ - asdf.
<BR>
<BR>
=== DefineGUIImageSetImage2(real gui_image_set_id, real posx, real posy, real width, real height, real offsetx, real offsety) ===
----
Description.
====Parameters====
   * _asdf_ - asdf.
<BR>
<BR>
=== UndefineGUIImageSetImage(real gui_image_set_id, string name) ===
----
Description.
====Parameters====
   * _asdf_ - asdf.
<BR>
<BR>
=== GetGUIImageSetImage(real gui_image_set_id, string name) ===
----
Description.
====Parameters====
   * _asdf_ - asdf.
<BR>
<BR>
=== GetGUIImageSetTexture(real gui_image_set_id) ===
----
Description.
====Parameters====
   * _asdf_ - asdf.
<BR>
<BR>
=== EnableGUIImageSetAutoScaling(real gui_image_set_id, real enable) ===
----
Description.
====Parameters====
   * _asdf_ - asdf.
<BR>
<BR>