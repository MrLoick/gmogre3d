#summary Defines an instance of a discrete, movable object based on a Mesh

=== Overview ===
GMOgre3D generally divides renderable objects into 2 groups, discrete (separate) and relatively small objects which move around the world, and large, sprawling geometry which makes up generally immovable scenery, aka 'level geometry'. 

Meshes and !SubMeshes deal with the definition of the geometry used by discrete movable objects. Entities are actual instances of objects based on this geometry in the world. Therefore there is usually a single set Mesh for a car, but there may be multiple entities based on it in the world. Entities are able to override aspects of the Mesh it is defined by, such as changing material properties per instance (so you can have many cars using the same geometry but different textures for example). Because a Mesh is split into !SubMeshes for this purpose, the Entity class is a grouping class (much like the Mesh class) and much of the detail regarding individual changes is kept in the !SubEntity class. There is a 1:1 relationship between !SubEntity instances and the !SubMesh instances associated with the Mesh the Entity is based on. 

Entities are created using the !CreateEntity function, and are included in the scene by associating them with a !SceneNode, using the !AttachEntityToSceneNode function.
<BR>
<BR>
=== !CreateEntity(string mesh_name) ===
----
Creates an entity for the current !SceneManager.
====Parameters====
   * _mesh_name_ - The name of the Mesh it is to be based on (e.g. 'knot.oof'). The mesh will be loaded if it is not already.
<BR>
<BR>
=== !CreateCubeEntity() ===
----
Creates a cube entity for the current !SceneManager.  A cube entity is created with a size of 100 x 100 x 100.  To resize a cube entity simply attach it to a scene node then use the !ScaleSceneNode function (it, to make it 16 x 16 x 16 set the scale to 0.16).
====Parameters====
   * _mesh_name_ - The name of the Mesh it is to be based on (e.g. 'knot.oof'). The mesh will be loaded if it is not already.
<BR>
<BR>
=== !CreateSphereEntity() ===
----
Creates a sphere entity for the current !SceneManager.  A sphere entity is created with a size of 100.  To resize a sphere entity simply attach it to a scene node then use the !ScaleSceneNode function (it, to make it 16 x 16 x 16 set the scale to 0.16).
<BR>
<BR>
=== !CreateFloorEntity(real xwidth, real ywidth, real xsegments, real ysegments, real xrepeat, real yrepeat) ===
----
Creates a floor plane entity for the current !SceneManager.  This is a convenience function that creates a properly rotated plane and an entity in a single function.
====Parameters====
   * _xwidth_ - The size of the plane in the x direction.
   * _ywidth_ - The size of the plane in the y direction.
   * _xsegments_ - The number of segments to the plane in the x direction.
   * _ysegments_ - The number of segments to the plane in the y direction.
   * _xrepeat_ - The number of times the texture should be repeated in the x direction.
   * _yrepeat_ - The number of times the texture should be repeated in the y direction.
<BR>
<BR>
=== !CreateCeilingEntity(real xwidth, real ywidth, real xsegments, real ysegments, real xrepeat, real yrepeat) ===
----
Creates a ceiling plane entity for the current !SceneManager.  This is a convenience function that creates a properly rotated plane and an entity in a single function.
====Parameters====
   * _xwidth_ - The size of the plane in the x direction.
   * _ywidth_ - The size of the plane in the y direction.
   * _xsegments_ - The number of segments to the plane in the x direction.
   * _ysegments_ - The number of segments to the plane in the y direction.
   * _xrepeat_ - The number of times the texture should be repeated in the x direction.
   * _yrepeat_ - The number of times the texture should be repeated in the y direction.
<BR>
<BR>
=== !CreateWallEntity(real xwidth, real ywidth, real xsegments, real ysegments, real xrepeat, real yrepeat) ===
----
Creates a wall entity for the current !SceneManager.  This is a convenience function that creates a properly rotated plane and an entity in a single function.
====Parameters====
   * _xwidth_ - The size of the plane in the x direction.
   * _ywidth_ - The size of the plane in the y direction.
   * _xsegments_ - The number of segments to the plane in the x direction.
   * _ysegments_ - The number of segments to the plane in the y direction.
   * _xrepeat_ - The number of times the texture should be repeated in the x direction.
   * _yrepeat_ - The number of times the texture should be repeated in the y direction.
<BR>
<BR>
=== !CreatePlaneEntity(real plane_id, real width, real height, real xsegments, real ysegments, real xrepeat, real yrepeat, real upx, real upy, real upz) ===
----
Creates an entity for the given pre-created plane.
====Parameters====
   * _plane_id_ - The ID of the existing plane.
   * _xwidth_ - The size of the plane in the x direction.
   * _ywidth_ - The size of the plane in the y direction.
   * _xsegments_ - The number of segments to the plane in the x direction.
   * _ysegments_ - The number of segments to the plane in the y direction.
   * _xrepeat_ - The number of times the texture should be repeated in the x direction.
   * _yrepeat_ - The number of times the texture should be repeated in the y direction.
   * _upx_, _upy_, _upz_ - The 'up' direction of the plane.
<BR>
<BR>
=== !DestroyEntity(real entity_id) ===
----
Removes & destroys an Entity from the !SceneManager. Must only be done if the Entity is not attached to a !SceneNode. 
====Parameters====
   * _entity_id_ - The ID of the entity.
<BR>
<BR>
=== !GetEntityNumSubEntities(real entity_id) ===
----
Retrieves the number of the sub entities (e.g. a parts of the entity).
====Parameters====
   * _entity_id_ - The ID of the entity.
<BR>
<BR>
=== !GetEntitySubEntity(real entity_id, real index) ===
----
Retrieves the ID of the sub entity (e.g. a part of the entity).
====Parameters====
   * _entity_id_ - The ID of the entity.
   * _index_ - The sub entity index.
<BR>
<BR>
=== !GetEntitySubEntityByName(real entity_id, string name) ===
----
Retrieves the ID of the sub entity (e.g. a part of the entity).
====Parameters====
   * _entity_id_ - The ID of the entity.
   * _name_ - The sub entity unique name.
<BR>
<BR>
=== !SetEntityMaterial(real entity_id, string mat_name) ===
----
Sets the material to use for the whole of this entity.

This is a shortcut method to set all the materials for all subentities of this entity. Only use this method is you want to set the same material for all subentities or if you know there is only one. Otherwise call !GetEntitySubEntity() and call the same function on the individual !SubEntity. 
====Parameters====
   * _entity_id_ - The ID of the entity.
   * _mat_name_ - The material name.
<BR>
<BR>
=== !ShowEntity(real entity_id) ===
----
Makes the entity visible.

Note that the entity still must be attached to a !SceneNode to be visible on the screen.
====Parameters====
   * _entity_id_ - The ID of the entity.
<BR>
<BR>
=== !HideEntity(real entity_id) ===
----
Makes the entity hidden.

An alternative approach of making an object invisible is to detach it from it's !SceneNode, or to remove the !SceneNode entirely. Detaching a node means that structurally the scene graph changes. Once this change has taken place, the objects / nodes that have been removed have less overhead to the visibility detection pass than simply making the object invisible, so if you do this and leave the objects out of the tree for a long time, it's faster. However, the act of detaching / reattaching nodes is in itself more expensive than setting an object visibility flag, since in the latter case structural changes are not made. Therefore, small or frequent visibility changes are best done using this method; large or more longer term changes are best done by detaching. 
====Parameters====
   * _entity_id_ - The ID of the entity.
<BR>
<BR>
=== !EnableEntityCastShadows(real entity_id, real enable) ===
----
Enables or disables the ability for a entity to cast shadows.

An entity will not cast shadows unless the scene supports it in any case (see !SetShadowTechnique), and also the material which is in use must also have shadow casting enabled. By default all entities cast shadows. If, however, for some reason you wish to disable this for a single object then you can do so using this method. 
====Parameters====
   * _entity_id_ - The ID of the entity.
   * _enable_ - Whether to enable or disable casting of shadows.
<BR>
<BR>
=== !GetEntityAnimationState(real entity_id, string state_name) ===
----
Gets the !AnimationState ID for a single animation.  You animate an entity by updating the animation states.
====Parameters====
   * _entity_id_ - The ID of the entity.
   * _state_name_ - The name of the animation state to retrieve.
<BR>
<BR>
=== !GetEntitySkeleton(real entity_id) ===
----
Get the Skeleton ID for an entity.
====Parameters====
   * _entity_id_ - The ID of the entity.
<BR>
<BR>
=== !SetEntityRenderingDistance(real entity_id, real distance) ===
----
Sets the distance at which an entity is no longer rendered. The default is 0, which means the entity is always rendered.
====Parameters====
   * _entity_id_ - The ID of the entity.
   * _distance_ - The maximum distance to display the entity.
<BR>
<BR>
=== !AttachEntityToSceneNode(real entity_id, real scene_node_id) ===
----
Attaches an entity to the specified !SceneNode.
====Parameters====
   * _entity_id_ - The ID of the entity.
   * _scene_node_id_ - The ID of the !SceneNode.
<BR>
<BR>
=== !DetachEntityFromSceneNode(real entity_id, real scene_node_id) ===
----
Detaches an entity from the specified !SceneNode.
====Parameters====
   * _entity_id_ - The ID of the entity.
   * _scene_node_id_ - The ID of the !SceneNode.
<BR>
<BR>
=== !GetEntityParentSceneNode(real entity_id) ===
----
Returns the !SceneNode ID to which an entity is attached.
====Parameters====
   * _entity_id_ - The ID of the entity.
<BR>
<BR>
=== !SetEntityRenderQueueGroup(real billboard_set_id, real type) ===
----
Sets the render queue group this object will be rendered through.

Render queues are grouped to allow you to more tightly control the ordering of rendered objects. If you do not call this method, all objects default to the default queue, which is fine for most objects. You may want to alter this if you want this entity to always appear in front of other objects, e.g. for a 3D menu system or such. 
====Parameters====
   * _entity_id_ - The ID of the entity.
   * _type_ - The render queue ID.  Can be:
      * _global.RENDER_QUEUE_BACKGROUND_ - Use this queue for objects which must be rendered first e.g. backgrounds.
      * _global.RENDER_QUEUE_SKIES_EARLY_ - First queue (after backgrounds), used for skyboxes if rendered first.
      * _global.RENDER_QUEUE_1_
      * _global.RENDER_QUEUE_2_
      * _global.RENDER_QUEUE_WORLD_GEOMETRY_1_
      * _global.RENDER_QUEUE_3_ 
      * _global.RENDER_QUEUE_4_
      * _global.RENDER_QUEUE_MAIN_ - The default render queue.
      * _global.RENDER_QUEUE_6_
      * _global.RENDER_QUEUE_7_
      * _global.RENDER_QUEUE_WORLD_GEOMETRY_2_
      * _global.RENDER_QUEUE_8_
      * _global.RENDER_QUEUE_9_
      * _global.RENDER_QUEUE_SKIES_LATE_ - Penultimate queue(before overlays), used for skyboxes if rendered last.
      * _global.RENDER_QUEUE_OVERLAY_ - Use this queue for objects which must be rendered last e.g. overlays.
      * _global.RENDER_QUEUE_MAX_ - Final possible render queue, don't exceed this.
<BR>
<BR>
=== !SetEntityQueryFlags(real entity_id, real flags) ===
----
Sets the query flags for this object.

When performing a scene query, this entity will be included or excluded according to flags on the entity and flags on the query. This is a bitwise value, so only when a bit on these flags is set, will it be included in a query asking for that flag. The meaning of the bits is application-specific.
====Parameters====
   * _entity_id_ - The ID of the entity.
   * _flags_ - The application specific flags.
<BR>
<BR>
=== !GetEntityAllAnimationStates(real entity_id) ===
----
Returns a string listing all animations in an entity, separated with a ',' character.
====Parameters====
   * _entity_id_ - The ID of the entity.
<BR>
<BR>