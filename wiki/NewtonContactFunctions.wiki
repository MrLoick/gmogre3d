#summary Represents a Newton contact collision object.

=== Overview ===
Newton contacts cannot be created manually.  Instead they are generated automatically by GMOgre3D whenever a Newton material collision occurs.  If a collision does occur, and you have a callback setup using the !SetNewtonMaterialPairContactCallback function, then a Newton contact object will be passed to the callback script.

For more information on this process, see !SetNewtonMaterialPairContactCallback.
<BR>
<BR>
=== !GetNextNewtonContact(real newton_contact_id) ===
----
Returns the ID of the next Newton contact object in a collision, if any.
====Parameters====
   * _newton_contact_id_ - The ID of the Newton contact object.
<BR>
<BR>
=== GetNewtonContactBodyCollisionID(real newton_contact_id, real body_id) ===
----
Returns the collision ID of a body currently colliding.
====Parameters====
   * _newton_contact_id_ - The ID of the Newton contact object.
   * _body_id_ - The ID of the Newton body colliding.
<BR>
<BR>
=== !GetNewtonContactNormalSpeed(real newton_contact_id) ===
----
Returns the speed of the collision.
====Parameters====
   * _newton_contact_id_ - The ID of the Newton contact object.
<BR>
<BR>
=== !GetNewtonContactForce(real newton_contact_id) ===
----
Returns the force of the collision.

Note this is only valid for objects in a stable state (sitting on top of each other, etc).
====Parameters====
   * _newton_contact_id_ - The ID of the Newton contact object.
<BR>
<BR>
=== !GetNewtonContactPosition(real newton_contact_id) ===
----
Returns the position of the collision.

Since GM cannot return 3 values in a single function call these factors are stored in temporary variables and can be retrieved by calling the GetX, GetY, and GetZ functions.
====Parameters====
   * _newton_contact_id_ - The ID of the Newton contact object.
<BR>
<BR>
=== !GetNewtonContactNormal(real newton_contact_id) ===
----
Returns the normal of the collision.

Since GM cannot return 3 values in a single function call these factors are stored in temporary variables and can be retrieved by calling the GetX, GetY, and GetZ functions.
====Parameters====
   * _newton_contact_id_ - The ID of the Newton contact object.
<BR>
<BR>
=== !SetNewtonContactSoftness(real newton_contact_id, real softness) ===
----
set softness of the current contact
====Parameters====
   * _newton_contact_id_ - The ID of the Newton contact object.
   * _softness_ - The softness of the contact. Must be positive.
<BR>
<BR>
=== !SetNewtonContactElasticity(real newton_contact_id, real elasticity) ===
----
Set the elasticity of the current contect.
====Parameters====
   * _newton_contact_id_ - The ID of the Newton contact object.
   * _softness_ - The elasticity of the contact. Must be positive.
<BR>
<BR>
=== !EnableNewtonContactFriction(real newton_contact_id, real enable, real index) ===
----
Enable or disables friction calculation for the current contact.
====Parameters====
   * _newton_contact_id_ - The ID of the Newton contact object.
   * _enable_ - Whether to enable or disable friction.  False makes the contact frictionless along the index tangent vector.
   * _index_ - The index to the tangent vector. 0 for primary tangent vector or 1 for the secondary tangent vector.
<BR>
<BR>
=== !SetNewtonContactFrictionCoef(real newton_contact_id, real static_coef, real kinetic_coef, real index) ===
----
Sets static friction for current contact.
====Parameters====
   * _newton_contact_id_ - The ID of the Newton contact object.
   * _static_coef_ - The static friction coeficient. Must be positive.
   * _kinetic_coef_ - The kinetic friction coeficient. Must be positive.
   * _index_ - The index to the tangent vector. 0 for primary tangent vector or 1 for the secondary tangent vector.
<BR>
<BR>
=== !GetNewtonContactPrimaryTangentDirection(real newton_contact_id) ===
----
Returns the primary tangent vector of the current collision.

Since GM cannot return 3 values in a single function call these factors are stored in temporary variables and can be retrieved by calling the GetX, GetY, and GetZ functions. 
====Parameters====
   * _newton_contact_id_ - The ID of the Newton contact object.
<BR>
<BR>
=== !GetNewtonContactSecondaryTangentDirection(real newton_contact_id) ===
----
Returns the secondary tangent vector of the current collision.

Since GM cannot return 3 values in a single function call these factors are stored in temporary variables and can be retrieved by calling the GetX, GetY, and GetZ functions. 
====Parameters====
   * _newton_contact_id_ - The ID of the Newton contact object.
<BR>
<BR>
=== !GetNewtonContactTangentSpeed(real newton_contact_id, real index) ===
----
Returns the speed of the current contact along the tangent vector of the contact.
====Parameters====
   * _newton_contact_id_ - The ID of the Newton contact object.
   * _index_ - The index to the tangent vector. This value can be 0 for primary tangent direction or 1 for the secondary tangent direction. 
<BR>
<BR>
=== !SetNewtonContactTangentAcceleration(real newton_contact_id, real accel, real index) ===
----
Force the contact point to have a non-zero acceleration along the surface plane.
====Parameters====
   * _newton_contact_id_ - The ID of the Newton contact object.
   * _accel_ - The desired contact acceleration.
   * _index_ - The index to the tangent vector. This value can be 0 for primary tangent direction or 1 for the secondary tangent direction.
<BR>
<BR>
=== !RotateNewtonContactTangentDirections(real newton_contact_id, real x, real y, real z) ===
----
Rotate the tangent direction of the contacts until the primary direction is aligned with the vector passed.
====Parameters====
   * _newton_contact_id_ - The ID of the Newton contact object.
   * _x_, _y_, _z_ - The aligning vector.
<BR>
<BR>
=== !SetNewtonContactNormalDirection(real newton_contact_id, real x, real y, real z) ===
----
Manually sest the normal for the current contact collision.
====Parameters====
   * _newton_contact_id_ - The ID of the Newton contact object.
   * _x_, _y_, _z_ - The normal vector.
<BR>
<BR>
=== !SetNewtonContactNormalAcceleration(real newton_contact_id, real accel) ===
----
Manually sets the acceleration along the current contact collision normal.
====Parameters====
   * _newton_contact_id_ - The ID of the Newton contact object.
   * _accel_ - The desired contact acceleration.
<BR>
<BR>
=== !RemoveNewtonContact(real newton_contact_id) ===
----
Removes a contact point from the contact joint. This removal means that the contact won't be processed further by Newton. 
====Parameters====
   * _newton_contact_id_ - The ID of the Newton contact object.
<BR>
<BR>