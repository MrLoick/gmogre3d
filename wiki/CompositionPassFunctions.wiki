#summary Object representing one pass or operation in a composition sequence.

=== Overview ===
This provides a method to conveniently interleave !RenderSystem commands between Render Queues. 
<BR>
<BR>
=== !SetCompositionPassType(real pass_id, real type) ===
----
Set the type of composition pass.
====Parameters====
   * _pass_id_ - The ID of the composition pass.
   * _type_ - The type of composition pass.  Can be:
      * _global.PT_CLEAR_ - Clear target to one color.
      * _global.PT_STENCIL_ - Set stencil operation.
      * _global.PT_RENDERSCENE_ - Render the scene or part of it.
      * _global.PT_RENDERQUAD_ - Render a full screen quad.
<BR>
<BR>
=== !SetCompositionPassIdentifier(real pass_id, real id) ===
----
Set an identifier for this pass.
====Parameters====
   * _pass_id_ - The ID of the composition pass.
   * _id_ - The pass identifier.
<BR>
<BR>
=== !SetCompositionPassMaterial(real pass_id, string mat_name) ===
----
Set the material used by a pass.

Applies when !PassType is RENDERQUAD.
====Parameters====
   * _pass_id_ - The ID of the composition pass.
   * _mat_name_ - The material name.
<BR>
<BR>
=== !SetCompositionPassFirstRenderQueue(real pass_id, real id) ===
----
Set the first render queue to be rendered in a pass (inclusive).

Applies when !PassType is RENDERSCENE.  It can be used to limit a compositor to just a select type of object (e.g. for a heat vision compositor).
====Parameters====
   * _pass_id_ - The ID of the composition pass.
   * _id_ - The render queue ID.  Can be:
      * _global.RENDER_QUEUE_BACKGROUND_ - Use this queue for objects which must be rendered first e.g. backgrounds.
      * _global.RENDER_QUEUE_SKIES_EARLY_ - First queue (after backgrounds), used for skyboxes if rendered first.
      * _global.RENDER_QUEUE_1_
      * _global.RENDER_QUEUE_2_
      * _global.RENDER_QUEUE_WORLD_GEOMETRY_1_
      * _global.RENDER_QUEUE_3_ 
      * _global.RENDER_QUEUE_4_
      * _global.RENDER_QUEUE_MAIN_ - The default render queue.
      * _global.RENDER_QUEUE_6_
      * _global.RENDER_QUEUE_7_
      * _global.RENDER_QUEUE_WORLD_GEOMETRY_2_
      * _global.RENDER_QUEUE_8_
      * _global.RENDER_QUEUE_9_
      * _global.RENDER_QUEUE_SKIES_LATE_ - Penultimate queue(before overlays), used for skyboxes if rendered last.
      * _global.RENDER_QUEUE_OVERLAY_ - Use this queue for objects which must be rendered last e.g. overlays.
      * _global.RENDER_QUEUE_MAX_ - Final possible render queue, don't exceed this.
<BR>
<BR>
=== !SetCompositionPassLastRenderQueue(real pass_id, real id) ===
----
Set the last render queue to be rendered in a pass (inclusive).

Applies when !PassType is RENDERSCENE.  It can be used to limit a compositor to just a select type of object (e.g. for a heat vision compositor).
====Parameters====
   * _pass_id_ - The ID of the composition pass.
   * _id_ - The render queue ID.  Can be:
      * _global.RENDER_QUEUE_BACKGROUND_ - Use this queue for objects which must be rendered first e.g. backgrounds.
      * _global.RENDER_QUEUE_SKIES_EARLY_ - First queue (after backgrounds), used for skyboxes if rendered first.
      * _global.RENDER_QUEUE_1_
      * _global.RENDER_QUEUE_2_
      * _global.RENDER_QUEUE_WORLD_GEOMETRY_1_
      * _global.RENDER_QUEUE_3_ 
      * _global.RENDER_QUEUE_4_
      * _global.RENDER_QUEUE_MAIN_ - The default render queue.
      * _global.RENDER_QUEUE_6_
      * _global.RENDER_QUEUE_7_
      * _global.RENDER_QUEUE_WORLD_GEOMETRY_2_
      * _global.RENDER_QUEUE_8_
      * _global.RENDER_QUEUE_9_
      * _global.RENDER_QUEUE_SKIES_LATE_ - Penultimate queue(before overlays), used for skyboxes if rendered last.
      * _global.RENDER_QUEUE_OVERLAY_ - Use this queue for objects which must be rendered last e.g. overlays.
      * _global.RENDER_QUEUE_MAX_ - Final possible render queue, don't exceed this.
<BR>
<BR>
=== !SetCompositionPassClearBuffers(real pass_id, real val) ===
----
Set the viewport clear buffers (defaults to FBT_COLOUR + FBT_DEPTH).
====Parameters====
   * _pass_id_ - The ID of the composition pass.
   * _val_ - A combination of FBT_COLOUR, FBT_DEPTH, FBT_STENCIL.
<BR>
<BR>
=== !SetCompositionPassClearDepth(real pass_id, real depth) ===
----
Set the viewport clear depth (defaults to 1.0).

Applies when !PassType is CLEAR. 
====Parameters====
   * _pass_id_ - The ID of the composition pass.
   * _depth_ - The depth value.
<BR>
<BR>
=== !SetCompositionPassClearColor(real pass_id, real color) ===
----
Set the viewport clear color (defaults to c_black with an alpha of 0).

Applies when !PassType is CLEAR.
====Parameters====
   * _pass_id_ - The ID of the composition pass.
   * _color_ - The color to use.
   * _alpha_ - The alpha transparency to use.
<BR>
<BR>
=== !SetCompositionPassClearStencil(real pass_id, real val) ===
----
Set the viewport clear stencil value (defaults to 0).

Applies when !PassType is CLEAR.
====Parameters====
   * _pass_id_ - The ID of the composition pass.
   * _val_ - The stencil value.
<BR>
<BR>
=== !EnableCompositionPassStencilCheck(real pass_id, real enable) ===
----
Enable or disable stencil checking.

Applies when PassType is STENCIL.
====Parameters====
   * _pass_id_ - The ID of the composition pass.
   * _enable_ - Whether to enable or disable stencil checking.
<BR>
<BR>
=== !SetCompositionPassStencilFunction(real pass_id, real func) ===
----
Set stencil compare function.

Applies when !PassType is STENCIL.
====Parameters====
   * _pass_id_ - The ID of the composition pass.
   * _func_ - The type of comparison function to use.  Can be:
      * _global.CMPF_ALWAYS_FAIL_
      * _global.CMPF_ALWAYS_PASS_
      * _global.CMPF_LESS_
      * _global.CMPF_LESS_EQUAL_
      * _global.CMPF_EQUAL_
      * _global.CMPF_NOT_EQUAL_
      * _global.CMPF_GREATER_EQUAL_
      * _global.CMPF_GREATER_
<BR>
<BR>
=== !SetCompositionPassStencilRefValue(real pass_id, real val) ===
----
Set stencil reference value.

Applies when !PassType is STENCIL.
====Parameters====
   * _pass_id_ - The ID of the composition pass.
   * _val_ - The stencil reference value.
<BR>
<BR>
=== !SetCompositionPassStencilMask(real pass_id, real val) ===
----
Set stencil mask.

Aapplies when !PassType is STENCIL.
====Parameters====
   * _pass_id_ - The ID of the composition pass.
   * _val_ - The stencil mask value.
<BR>
<BR>
=== !SetCompositionPassStencilFailOperation(real pass_id, real op) ===
----
Set stencil fail operation.

Applies when !PassType is STENCIL.
====Parameters====
   * _pass_id_ - The ID of the composition pass.
   * _op_ - The stencil fail operation.  Can be:
      * _global.SOP_KEEP_ - Leave the stencil buffer unchanged.
      * _global.SOP_ZERO_ - Set the stencil value to zero.
      * _global.SOP_REPLACE_ - Set the stencil value to the reference value.
      * _global.SOP_INCREMENT_ - Increase the stencil value by 1, clamping at the maximum value.
      * _global.SOP_DECREMENT_ - Decrease the stencil value by 1, clamping at 0.
      * _global.SOP_INCREMENT_WRAP_ - Increase the stencil value by 1, wrapping back to 0 when incrementing the maximum value.
      * _global.SOP_DECREMENT_WRAP_ - Decrease the stencil value by 1, wrapping when decrementing 0.
      * _SOP_INVERT_ - Invert the bits of the stencil buffer.
<BR>
<BR>
=== !SetCompositionPassStencilFailDepthOperation(real pass_id, real op) ===
----
Set stencil fail depth operation.

Applies when !PassType is STENCIL.
====Parameters====
   * _pass_id_ - The ID of the composition pass.
   * _op_ - The stencil fail depth operation.  Can be:
      * _global.SOP_KEEP_ - Leave the stencil buffer unchanged.
      * _global.SOP_ZERO_ - Set the stencil value to zero.
      * _global.SOP_REPLACE_ - Set the stencil value to the reference value.
      * _global.SOP_INCREMENT_ - Increase the stencil value by 1, clamping at the maximum value.
      * _global.SOP_DECREMENT_ - Decrease the stencil value by 1, clamping at 0.
      * _global.SOP_INCREMENT_WRAP_ - Increase the stencil value by 1, wrapping back to 0 when incrementing the maximum value.
      * _global.SOP_DECREMENT_WRAP_ - Decrease the stencil value by 1, wrapping when decrementing 0.
      * _global.SOP_INVERT_ - Invert the bits of the stencil buffer.
<BR>
<BR>
=== !SetCompositionPassStencilPassOperation(real pass_id, real op) ===
----
Set stencil pass operation.

Applies when !PassType is STENCIL.
====Parameters====
   * _pass_id_ - The ID of the composition pass.
   * _op_ - The stencil pass operation.  Can be:
      * _global.SOP_KEEP_ - Leave the stencil buffer unchanged.
      * _global.SOP_ZERO_ - Set the stencil value to zero.
      * _global.SOP_REPLACE_ - Set the stencil value to the reference value.
      * _global.SOP_INCREMENT_ - Increase the stencil value by 1, clamping at the maximum value.
      * _global.SOP_DECREMENT_ - Decrease the stencil value by 1, clamping at 0.
      * _global.SOP_INCREMENT_WRAP_ - Increase the stencil value by 1, wrapping back to 0 when incrementing the maximum value.
      * _global.SOP_DECREMENT_WRAP_ - Decrease the stencil value by 1, wrapping when decrementing 0.
      * _global.SOP_INVERT_ - Invert the bits of the stencil buffer.
<BR>
<BR>
=== !EnableCompositionPassTwoSidedOperation(real pass_id, real enable) ===
----
Enable or disable two sided stencil operation.

Applies when !PassType is STENCIL.
====Parameters====
   * _pass_id_ - The ID of the composition pass.
   * _enable_ - Whether to enable or disable two sided operation.
<BR>
<BR>
=== !SetCompositionPassInput(real pass_id, real id, string tex_name, mrt_index) ===
----
Set an input local texture.

An empty string clears the input. Applies when !PassType is RENDERQUAD.
====Parameters====
   * _pass_id_ - The ID of the composition pass.
   * _id_ - Input to set. Must be in 0 - 15.
   * _input_ - Which texture to bind to this input. An empty string clears the input.
   * _mrt_index_ - Which surface of an MRT to retrieve. 
<BR>
<BR>